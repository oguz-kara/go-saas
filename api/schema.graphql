# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddCompanyNoteInput {
  content: String!
  type: String
}

type AttributeType {
  channelToken: String!
  createdAt: DateTime
  id: ID!
  name: String!
}

type AttributeTypeConnection {
  items: [AttributeType!]!
  totalCount: Int!
}

type AttributeValue {
  attributeTypeId: ID!
  id: ID!
  type: AttributeType!
  value: String!
}

type AttributeValueConnection {
  items: [AttributeValue!]!
  totalCount: Int!
}

type AttributeWithType {
  attributeTypeId: ID!
  id: ID!
  name: String!
  value: String!
}

type AuthenticationPayload {
  token: String!
  user: User!
}

type Channel {
  createdAt: DateTime!
  description: String
  id: ID!
  name: String!
  token: String!
  updatedAt: DateTime!
}

type ChannelConnection {
  items: [Channel!]!
  totalCount: Int!
}

type Company {
  address: JSON
  attributes: [AttributeWithType!]
  channelToken: String
  createdAt: DateTime!
  deletedAt: DateTime
  description: String
  id: ID!
  industry: String
  linkedinUrl: String
  name: String!
  notes(
    """Search query"""
    searchQuery: String

    """Number of items to skip"""
    skip: Int = 0

    """Number of items to take"""
    take: Int = 10
  ): CompanyConnectionNotes!
  updatedAt: DateTime!
  website: String
}

type CompanyConnection {
  items: [Company!]!
  totalCount: Int!
}

type CompanyConnectionNotes {
  items: [CompanyNote!]!
  totalCount: Int!
}

type CompanyNote {
  channelToken: ID!
  companyId: ID!
  content: String!
  createdAt: DateTime!
  id: ID!
  type: String
  updatedAt: DateTime!
  userId: ID!
}

input CreateAttributeInput {
  attributeTypeId: ID!
  value: String!
}

input CreateAttributeTypeInput {
  name: String!
}

input CreateChannelInput {
  description: String
  name: String!
  token: String
}

input CreateCompanyInput {
  address: JSON
  attributeIds: [String!]
  description: String
  industry: String
  linkedinUrl: String
  name: String!
  website: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

input ListQueryArgs {
  """Search query"""
  searchQuery: String

  """Number of items to skip"""
  skip: Int = 0

  """Number of items to take"""
  take: Int = 10
}

input LoginUserInput {
  email: String!
  password: String!
}

type LogoutOutput {
  success: Boolean!
}

type Mutation {
  addNoteToCompany(addCompanyNoteInput: AddCompanyNoteInput!, companyId: ID!): CompanyNote!
  createAttribute(createAttributeInput: CreateAttributeInput!): AttributeValue!
  createAttributeType(createAttributeTypeInput: CreateAttributeTypeInput!): AttributeType!
  createChannel(createChannelInput: CreateChannelInput!): Channel!
  createCompany(createCompanyInput: CreateCompanyInput!): Company!
  deleteAttribute(id: ID!): Boolean!
  deleteAttributeType(id: ID!): Boolean!
  deleteCompany(id: ID!): Company!
  deleteCompanyNote(noteId: ID!): CompanyNote!
  loginUser(loginUserInput: LoginUserInput!): AuthenticationPayload!
  logoutUser: LogoutOutput!
  registerNewTenant(registerNewTenantInput: RegisterNewTenantInput!): AuthenticationPayload!
  registerUser(channelToken: String!, registerUserInput: RegisterUserInput!): AuthenticationPayload!
  updateAttribute(id: ID!, updateAttributeInput: UpdateAttributeInput!): AttributeValue!
  updateAttributeType(id: ID!, updateAttributeTypeInput: UpdateAttributeTypeInput!): AttributeType!
  updateCompany(id: ID!, updateCompanyInput: UpdateCompanyInput!): Company!
  updateCompanyNote(noteId: ID!, updateCompanyNoteInput: UpdateCompanyNoteInput!): CompanyNote!
}

type Query {
  attributeTypes(args: ListQueryArgs): AttributeTypeConnection!
  attributeValues(
    attributeTypeId: ID!

    """Search query"""
    searchQuery: String

    """Number of items to skip"""
    skip: Int = 0

    """Number of items to take"""
    take: Int = 10
  ): AttributeValueConnection!
  channelByToken(token: String!): Channel
  channels(
    """Search query"""
    searchQuery: String

    """Number of items to skip"""
    skip: Int = 0

    """Number of items to take"""
    take: Int = 10
  ): ChannelConnection!
  companies(
    channelToken: ID

    """Search query"""
    searchQuery: String

    """Number of items to skip"""
    skip: Int = 0

    """Number of items to take"""
    take: Int = 10
  ): CompanyConnection!
  company(id: ID!): Company
  companyNotes(
    companyId: ID!

    """Search query"""
    searchQuery: String

    """Number of items to skip"""
    skip: Int = 0

    """Number of items to take"""
    take: Int = 10
  ): CompanyConnectionNotes
  me: User
}

input RegisterNewTenantInput {
  email: String!
  password: String!
  tenantDescription: String
  tenantName: String!
  userName: String!
}

input RegisterUserInput {
  email: String!
  name: String!
  password: String!
}

input UpdateAttributeInput {
  value: String!
}

input UpdateAttributeTypeInput {
  name: String!
}

input UpdateCompanyInput {
  address: JSON
  attributeIds: [String!]
  description: String
  industry: String
  linkedinUrl: String
  name: String
  website: String
}

input UpdateCompanyNoteInput {
  content: String
  type: String
}

type User {
  createdAt: DateTime
  email: String!
  id: ID!
  name: String
  updatedAt: DateTime
}